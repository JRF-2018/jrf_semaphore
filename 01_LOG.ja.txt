

    LOG of nes_semaphore

    (Created: 2014-02-1? +0900, Time-stamp: <2020-01-24T03:14:50Z>)


X. このファイルについて

このファイルには TODO や LOG を私的に書き溜めていくもので、公開する予定
はなかったものです。

しかし、暫定公開バージョン 0.03 から、正式公開バージョン 0.10 を目指し
ている際中に「持病」である統合失調症を再発し、入院。一応退院しましたが、
まだ治療薬の影響が強い中、今、このセクションを書いています。

他の国の事情は知りませんが、精神病の治療は数ヶ月どころか年単位に及ぶこ
ともあり、私のソースによく書いてある「３ヶ月」の間に何か進展ができるよ
うには思えません。

そこで、パブリックドメインを目指していたわけですし、ここは忌憚なくやり
たかったこととかもぶちまけようと、このファイルも添付することにしました。

他者が読むことをあまり想定していません。ご参考程度に。



X. 次にやること or すぐ解決すべきバグ

  * ギリシャ語、ロシア語、アラビア語のフォントも作っておきたい。漢字で
    16x16 を使う例としてハングルもやりたかったが、要素が多過ぎて厳しい
    ので、擬似的な漢字に留めるかも。

  * 次のバージョンナンバーは、0.10 にするか…。

    バージョン 0.10 は「ベースリリース」。普通の言葉では 0.0* がαバー
    ジョンで、0.1* はβバージョン的な感じになるのかもしれないが、正直、
    βバージョンといえるほどのできではない。ある意味で「暫定」のままで
    はあるのだが、この前までと違って、時間的な制限があってそうしている
    のではない。

    「ベースリリース」の意味は、0.1* については、今回の機能から大きな
    変更はしないという宣言といったところ。0.1* の間は基本的にはドキュ
    メントの充実がメインで、そこで気付いた不具合のみを修正していく感じ。
    そんなわけで、0.10 に関してはドキュメントがまだ充実していません。

    ち、違うよ、ドキュメントがまだ充実してない言い訳で「ベースリリース」
    とか言ってるわけじゃないよ！(^^;

    (機能を早めに公開すると同時に、ドキュメント化の前に機能を固定するプ
    レッシャーを自分にかけた…と言えば、カッコは付くかな？)

  * More Test!



X. ログ

2020-01-24

J で convert する際に、先頭が大文字の場合の処理を元の tankanji に戻した。
内部的に、先頭が大文字の単漢字変換を SKK にするかどうかを
default-init.nginit 内で指定するようにした。

2020-01-23

J で convert する際も、先頭が大文字の場合は、tankanji ではなく skk 辞書
が選択されるようにした。j で convert する際は、以前のまま。

2017-11-13

ローマ字カナ変換で、FYA = フャ、FYU = フュ、FYO = フョ に対応。
quail-naggy.el のバージョンが 0.10 になるのとあわせて jrf_semaphore.pl
と lib/JRF/FlagSemaphore.pm もバージョンナンバーを 0.11 に上げておく。

2017-07-13

quail-naggy.el のバージョンが 0.09 になるのとあわせて、ほとんど影響はな
いが、jrf_semaphore.pl もいちおうバージョンナンバーだけ 0.10 に上げてお
く。

2017-06-08

quail-naggy.el のバージョンアップに合わせて、日本語変換の部分が変更になっ
ているが、ほぼ影響はないものと思われる。しかし、2017-05-22 分の更新が
jrf_semaphore.pl に関しては割と意味のある変更だったのにバージョンナンバー
を上げなかったので、そのかわりに、今回は、意義の少ない変更でも、バージョ
ンナンバーを 0.09 に上げることにした。

2017-05-22

japanese-roman-period.trl japanese-roman-kutouten.trl の NN と Nの位置
を交換し、カナの逆変換時にまっとうになるようにした。これはバージョン
0.08 にする際にまぎれこんだバグ。

2017-04-28

クラスをモジュール化する。実行順序の問題でバグが出るが、適当に修正した。
また、手旗の数字モードの説明を加えるなど、公開に向けてドキュメントを書
き改めた。

手旗信号に -T naggy を指定して変換するとき、最初につく jrf c の間に「プ
ロトコル」として d.skk SKK-JIYO.L,2015?????  d.tankanji Wind2.txt など
と指定したいかもしれない。最低限の対応だが、それがコマンドラインオプショ
ンで指定できるようにしておいた。

2017-04-27

jrf_semaphore.nes のロゴで色がおかしいのをわざとそのままにしていたのを
直す。それ以外に変更点はないが、jrf_semaphore.asm のバージョンを 0.08
に上げておいた。

2017-04-27

久々にいじる。

quail-naggy.el 付属の naggy-backend.pl とモジュールの共通化をした。

漢字入力モード(naggy mode)を作る。kan,J,5. で変換。漢字指定時のキーボー
ド位置について ,./; が使えないので、. の代わりに(大文字の) C、, の代わ
りに V、; の代わりに B、/ の代わりに G を使う。,, で , を入力。,J のあ
とのページ送りは ,。ページ戻しや ,J の途中でのカタカナ確定などはなしに
する。kana,h. でひらがな確定。ヘブライ語やギリシャ語の確定にも対応する。
変換前にスペースがあれば、英字確定とする。変換中にスペースがあれば、
". " と同じとみなす。→ 変換中のスペースは中断とした。

はじめ、kan,j5. で単漢字変換と思っていたが、デフォルトは skk のほうが便
利だろうから、変換文字の j は skk にし、J を tankanji にする。そして、
J のあとすぐにキーボードの位置入力で良いかと思っていたが、間に , を挟み、
kan,J,5. ということにする。ただし、一番目の候補で確定するときは
kan,J. と書ける。

jrf_semaphore.pl -t -u -T naggy のとき、漢字は XXXX,u. の形式で出力する。

convert を使うときは convert-init.nginit を事前に実行するようにする。

2014-06-07

ギリシア語も JIS にある範囲はフォント描いて、いちおう表示はできるように
したつもりだが未テスト。

2014-06-06

replay の . と , を数字モードでもすぐに出すようにした。UI で「1P の→」
を出せるように W を特別扱いするように変更。セーブができないようになって
たという致命的バグも見つかった。

あと、オマケの Arabic Presentation Forms B の簡単なテスト。

2014-05-23

aa-char は 0.10 では諦める。バージョン 0.10 に限らずおそらく別プログラ
ムにしたほうがいい。

2014-04-24

バージョン 0.05 への凖備。トッカントッカン…。

2014-03-30

キー入力の大改造。テストはまだまだ。

2014-03-29

FontNameRes の導入と ToPrintable まわり。なんといっても PRG ROM を
$2000 バイト以上使う方法がなかなかわからなくてハマって、その解決に時間
がかかった。

2014-03-28

jsnes_test.html のバージョン 0.04 として、jsnes_fc_ui.js のバージョン
0.04 をネットに置く。そのためのテスト＆実装。Google 翻訳利用のための
memory tag も試験的に導入。

いちおう最新版なら Opera, Safari, IE でも、jsnes_fc_ui.js が ROM を読ん
でスタートするまではいくようになる。

2014-03-27

character16b1.bkg を作る。これで Latin-1 に対応できるはず。あと、いちお
う ~/src/GTASA/txdtopng.pl を書いてみたが…。使うかどうかは不明。等幅
フォントでないため、そのままでは使えないし。

2014-03-26

JRF::Utils::Hooker の導入。昨日の jsnes_fc_ui.js の拡張を少しいじる。

2014-03-25

jrf_semaphore.html で Another Console ボタンを作り、NES 画面を重ねて表
示できるようにした。

jsnes_fc_ui.js で、X Glasses にまで対応してしまった、やりたかったように
スプライトで使ってる色という指定で透けさせるのは難しく、buffer での
rgb に関してになってしまったけど。

2014-03-21

「不具合」を正すぐらいのちょっとした変更。一気にキールーチンの大変更を
行ってしまうか、とりあえずここで 0.03 として公開してしまうか迷う。

2014-03-19

SwapBitsText 関連の導入。

2014-03-18

バージョン 0.02。

2014-03-15

おもしろそうだったので、JRF::Dummy, JRF::Puppet, JRF::Figure を造る。
が、使う必要あるのかな？

2014-03-11

初公開！。バージョン 0.01。

2014-03-10

jrf_semaphore.html を書き、公開準備は、あとアーカイブ作りだけまで来た。
それが 311 の直前になるとは…。これも因果か？

2014-03-09

provide_class や require_class 等の処理。パッケージ化。その辺のプロト
コルをがんばってみた。パッケージ名とか、いろいろ rename。

とにかく、jrf_semaphore.pl は初公開時の目標としたところまで到達。

2014-03-08

GifFont, GifFont::JRFSemaphoreRom を作成。JRFSemaphore::Command 書きあ
げるが、未テスト。

2014-03-07

マッパー３に対応。8x16 フォントの 0x80-0xff の文字の並べ方を決める。

2014-03-06

flag_code_to_string と ascii_to_flag_code を実装。

JRFSemaphore::Sailor を作り、GIF アニメで動かすとこまで。でも、GD が何
かと変。

2014-03-04

~/projects/naggy/emacs-input-method/ のほうで、Translit 等の MyOO 化を
し(てしまっ)た。ただ、include してるファイルとかをどうするか、
jrf_semaphore.pl はテンプレートから make するとか…そういった方針を決
めないと、今回は make なしのほうがいい気がするが…。

2014-03-04

SAV のダウンロードに対応。

2014-03-03

Flag Semaphore も動くようになったが…、なかなか入力できない。何かおか
しい。

2014-03-02

jsnes_fc_ui.js がとりあえず最後まで動くようになった。

2014-03-01

jsnes_fc_ui.js を書き上げる。テストは次回。

2014-02-28

通じるか、あんまり自信ないけど、r-to-l の例と、逆順コードを試せることも
あるから、ヘブライ文字のフォントを描いてみた。他の文字と同じく影を付け
るかはどうか迷ってる。

2014-02-27

キャラの色数を増やす。JSNES のメソッドをフックすべきところのアタリを付
ける。「暫定公開」のたに 00README.txt を書きはじめる。

2014-02-26

sample1 のアーカイブ作り。shar のバイナリとテキスト混在アーカイブなど機
能について重要な発見あり。あと、UI の開発に向けた下調べがだいたい終る。

2014-02-25

ファミコンをオマージュした UI のデザイン。

2014-02-24

JSNES を試す。なかなかうまくいかず、DynamicAudio の Web Audio API 版ま
で作るはめに。音程は合ってる感じだけど、本当にできてるかかなり不安。

でも、その他は、かなり融通効きそうな感じ。遅いけど。

2014-02-23

MDReplay のデバッグも終って、いちおう NES ROM は目標に達した。ヤッター！
まぁ、バグはあるだろうけど、それはおいおい…。

2014-02-22

とりあえず nes では Replay 以外はできるようになった。ただ、まだテストは
全々やってない。

あと、UseRightToLeft や 8x16 フォントに対応。

2014-02-21

nes でのモールス信号の処理はだいたい完成。キー処理をかなり見直した。

2014-02-20

gen_morse_table.pl を取りあえず書き上げた。モールス信号用のキー処理を
構成した。

2014-02-19

jrf_semaphore.pl で asm と nes rom のパーサを書いた。そのおかげで、
FlagCode が R << 3 + L だったのを L << 3 + R と逆にしたほうがいいことに
気づいたのでそうした。

モールス信号音を決めた。

2014-02-18

Tie::Hash を用いて、オブジェクトのハッシュのキーが存在しない代入に警告
を出すようにした。できたんだね～、こういうことが…。

2014-02-17

SetScroll を挿入してキー入力後のゆれをなくすための試行錯誤。WaitVScanの
あと SetScroll し、WaitVBlank 後に書くのが安定。$2006 をいじる前もいじっ
た後にも必要(いじったあとは WaitVBlank は必要ないこともある)。

gen_morse_table.pl を作りながら、モールス符号の拡張仕様等のアイデアを
出していく。

2014-02-16

psg_test.asm を作る。

2014-02-15

ParseKey を書いてとりあえず動くようになるまで。

2014-02-14

Sailor や Logo がちゃんと表示されるところまで。

2014-02-13

jrf_semaphore.asm を作りはじめる。

2014-02-12

下調べ＆flag_logo.chr を作りはじめる。



X. やらないこと

  * 0番位置の旗は外向きではなく内向きにする。 <- italic なら別にいい
    というのがわかりやすいのでそのままにし、SailorFont のデフォルトは
    italic か italic なしの slant にした。

  * あえて Starting Signal は送らない。ReplayInitial で十分と考える。

  * pack_bits に B* は対応しない。やるとしても、最後がそうなっってるの
    に対応できるぐらいで、unpack_bits と逆変換不能になるから。やりたけ
    れば、@r に入れておいて、"B" x @r とかやればいい話だし。

  * Naggy::unescape_utf8 を作り、\u{} は utf8 コードに \x はコードの一
    部にできれば美しい気はするが、それを一端認めると、かなりややこしく
    なるのでやらない。
  
  * flag_code_to_ascii などは、translit として構成できるところはそうし
    たい。unescape は最後の処理なので要注意。→モールス等も処理するよう
    になったので、これは今のままでいい。TRS とかの研究としては意味ある
    かもだけど、それはしない。

  * trl 内に .giffont はやらない。やるなら nginit 枠で。

  * JRF Tarot 売るくらいなら、旗を売りゃいいじゃんってのは、やらない。

    こんなデザイン性の薄い物に、「個性」みたいなものを与えるには国家…
    最低でもデカい団体がないとダメで、そうではなしに軍装備としてコネで
    搬入するみたいな中小ビジネスモデルも、「私がやる」という可能性はも
    うない。そこを商売にする無理をするぐらいなら、別のことをやる。

  * rom のほうではキャンセルでワード削除を行っているが、pl のほうではやっ
    てない。そのあたりを凝ることは可能だが、そういうことがしたいなら、-T
    ed (or -T sed) みたいなのが実現可能であることに気付くべきだ。制御文
    字でエディットモードに切り換えたり、最初の改行コードまでをコマンド
    として編集を行わせることは不可能ではない。そして、それをやるなら
    "-T sh" "-T perl" まで視野に入ってくる。つまり、GUI の世界になった
    からわかりにくくなったが、コンピュータはキーボードによるシリアル入
    力の世界であり、コマンド等もそういう一連のキーボード入力の延長上で
    しかないのである。モニタがあるから、そうでないという印象が強いだけ
    で、結局は、入力はずっと続く文字列にすぎない。それをすべてこのフレー
    ムワークでやる必要はなく、一部の機能に特化して意味を出さねばならな
    い。

    ただし、-T naggy-ed についてはやってみたい。RESULT として出てくるの
    は変換候補などでしかなく、naggy-ed はその内部状態として text-gifな
    どのデータを作り上げているとする。そして、ある意味 backend 上にある
    それが naggy frontend の実体であり、IME などの "naggy" はつまり、
    naggyed を hack するプログラムという体裁にすれば良いのではないか？
    naggy-ed の内部状態データを naggy-inject や naggy-capture で操作す
    るといったように。

  * jrf_semaphore.lst はアーカイブに含めない。shar が大きくなり過ぎる
    のを防ぐため。

  * XSLT で a を 「anchor」 と指定できたほうがいいのかも。それは
    Google 翻訳とはまた別になるかも。

  * poo で C の外部モジュールが欲しい人は、まず pm を書いてから poo で
    wrapper を書けばいいとする。

  * sdbm で複数テキストファイルを扱うようにはしない。フォーマットの解釈
    があとから難しくなるから、また、テキストファイルぐらいなら、100MBを
    超えても今じゃ sdbm 作っておいても扱えない量じゃないだろうし。

  * Pause 時に Rom を変えると Pause のまま切り換わるようにする。→めん
    どうくさいので諦めた。

  * $JRF::MyOO::CVAR_DEBUG = 1 にするタイミングは、JRF::Figure->new のと
    き一時的にするだけでもいい気はするが…やらない。new の処理を変に重
    くするよりは、自由を残すほうを選ぶ。

  * 下の aa-char 自体、もうやらない。漢字の表示とかはそういうのを使った
    ほうがいいというヒントをこのログに残すだけにして、開発は一端ここで
    終了する。英語コメントとかもできなくてゴメンね。

  * 専用の naggy 辞書を作る。JIS 第一水準または常用漢字で。辞書は、「こ
    う」「し」といった重なりの多い読みについては別枠にするといったもの
    でも試してみて、評価関数作って評価してもよい。→ これはしない。あえ
    て、使用辞書はあいまいにしておく。(2017-04-27)

  * text-gif にするとき、定義されてない文字コードについては ? などを表
    示するようにする。→ いや、適当なフォントが偶然に表示されるという
    のが仕組みだったので、これはやらない。 (2017-04-27)



X. やること

  * 日本語コメントの隣か下に(国際版の)英語コメントも書く。

  * Makefile.dist を完成近くなったら作る。Perl Module 作るならいらない
    かもだけど…。でも、.nes はバイナリ付けるから、それ作るようにはあっ
    てもいいかな？gen_*.pl とかを含めるのを忘れないように。

  * 「国際版」たる index.html ではしないが、ブログのほうでは、『踊るア
    メリカ艦隊』からキャプチャした画像と共に紹介したい。

  * ヘブライ文字とか慣れないと読むのも難しい文字について、GIF などで読
    むコツを残しておきたい。ついでなので、そんな GIF から文字をひろって
    変換した文字列を GIF にしてしまうコマンドも作る。

    で、あえて複雑なことはせず、テーブルは 256 文字固定で、Unicode は
    (指定されたアドレスを引いたあと)下位 8 bit のみ有効。出力の一行は
    22文字固定で、ページを分けたりせず縦に長い gif にする。スペースも端
    に一文字分のスペースを置くのと行間も必ず一文字分空けるだけ。改行コ
    マンドすら解釈せずその分フォントを詰められるようにする。

     translit で .trl 内に↓とか指定できるようにする。(-a は Unicode の
     アドレスを引く分を指定。-f は(8x8の)16x16のテーブル開始位置。)
  
     .gif_font XXX.gif -s 8x8 -a 0xXXX-0xXXX:0x0000 -d l-to-r -f 10,10

     ディレクション -d は u-to-d で縦書きにしたいが、横書きで下から上
     に行送りというのもあったはず、でも、それはこの機構ならフォントを
     逆さまにすればいい。(--rotate もあっていいかも。)

     「オプション」は GetOpt::Long で処理すればいいはず。

  * ファミコン互換機で 2P が使える掲帯機で、こういうのが欲しい！という
    のを絵にする。ファミコン ROM が差せて、ミニ液晶が HDMI (か RCA) で
    差さってて、しかも外部コントローラー端子がある…とか。

    でも、「Just for Naval Challenge.」とかやるには防水ないとダメで無理
    そうだからキャッチコピーに困るけど。あ、端子の防水はほぼないけど、
    部品交換が容易なことを売りにすればいいか…。ゴム付きガラスポットみ
    たいな感じにして、ROM や液晶(の３つの RCA 端子)とか差したあとゴム締
    めするようにしたらコンセプトは伝わるかな？

    ROM は専用 ROM リーダを(防水USB端子で)線につなぎ、一気に吸い出した
    あと、ROM がささっていることを確認するだけでお茶をにごし「キャッ
    シュ」を使えばいいんじゃないか？で、その端子は(ハブを介して)コント
    ローラ端子にもなる…と。

    案外 RCA でやるより無線でやったほうが良かったりして…。ROM リーダー
    も実は無線でつながっている…とか。認識は本体にカメラがあったら便
    利…。あ、だから「QR コネクト」なのか…。

  * データのデフォルトインストール先は nes_semaphore のほうがいいのか
    な…。プログラム名は jrf_sempaphore.pl のままでそうしても混乱ないか
    どうか…。

  * LoadCount や RandSeed についてそうしたスナップショットの「つじつま」
    が合うように交換するのが何か使えないか？どうも Twitter に「スクリー
    ンショット」を投稿するのはJavaScript だけだと難しそうなので、その代
    わりとして。

  * Hooker は fetch_hook も可能にしておくが、add_cvar_hook は
    store_hook しか使わない。RandSeed に似た機構はどうするかは今後の課
    題。

    Hooker を使う naggy-inject が Hacker クラスみたいにすればいいのか
    な？

  * asm がちゃんとなってるかチェックする pl も作る？asm のラベルをもう
    ちょっとまともにする必要はあるかも。

  * 公開前に open のとこで、encode_fn をしてるかチェック。

  * text-gif で、プレーンの重ね合わせに対応。Latin-1 もこの応用として
    対応したい。まずは、ヘブライ文字に関して作っていく感じで。これを応
    用しての漢字表示も視野に入れる。(説明に TRS という分野の紹介を入れ
    ておこう！)

    rom 版でどう対応するかが問題だが、これは前のエディタに関するひとこ
    と [cocolog:77784520] ＞下が透けてフォントの大きさとか行間文字間が
    変えられる「チェックしやすいエディタ」＜を活かそうか？

    名前は、和名「スケスケ眼鏡」、英名「X (ray) glasses」以外は考えら
    れない。色の番号と透明度を「8:128」みたいな感じで複数指定できるよ
    うにし、グローバル BG 以外にスプライトの一部の色を透けさせて、BG
    が見えるようにしたりする。(JSNES でそこまでできるかな…。)

  * ２倍体変換を 16x16 ドットフォントのために用意する。一つのコードを
    マイナスとプラスの値の「二倍体」にし、それをマッピングできるように
    する。当然、gif-font の -a オプションは、負の数に対応しないといけ
    ない。

  * 漢字は Latin-1 的な方法で組み合わせようとすると、かなりの数の ROM
    を動かす必要に迫られ、できなくはないので、できるようにはしておくが、
    現実的な使用に耐える方法と考えるべきではないだろう。

    その替わりとして --aa-char (--ascii-art-charまたは--char-art-char)
    を用意したい。BITS に文字列を格納した上で、BitsMark の文字を、
    16x16 (最大 22 x ?)ドットフォントを Text エリアで「アスキーアート」
    として表示する。pl でそういうセーブを出力できるようにする。そのため、
    gif_font とはまた違い、かなり大きめのフォントマップからの読み出しに
    も対応すべきだろう。

    基本は 8x16 ドットフォントの bank 1 番あたりに、上下２ドットのパター
    ンを置いておく、そこは Latin-1 の符号類といっしょのページにすれば
    いいだろう。

    将来的にはこのアスキーアートの技法を流用して、凪の仮想鍵盤にしたり
    できればおもしろいが。

    aaはベタテキストで、そのテキスト用の sdbm を作っておく…みたいなテク
    ニックをここで投入すりゃいいってことかな。

    オプションとしては、メインモードとして実装 --aa-char と書かずとも
    -a や --art で OK でいいのではないか？その後、--cursor 指定し、それ
    がないときは、最後の一文字にカーソルがあるとする。sdbm にないときの
    ための、ToPrintable 用 char みたいなのの用意を忘れないように。

    で、他の処理と統一性を出すため、output は、あえて、ファイルのドット
    表現を、8x16 ドットフォントにしたコードにして、それを逆変換して元
    の(改行込みの)アスキーアートドット表現にして出力する。そのときの
    $output_mode として特別に "inv_aa" (IAA) みたいなのを作る。

  * TxtDic。Perl の sdbm を txt と結び付けるクラスを作る。

  * GTASA の txa にも対応。ただし、コードは残すが、ロシア語部分は、テ
    ストのみに使ってコメントアウトしておく。あまりにも不完全だろうから。

  * jsnes_test.html で You Link is とかやっておくといいことはあるだろ
    うか？あまり意味がありそうに見えない。もうちょっと工夫がないと…。

  * main_mode の --sav は obsolete とし、かわって --sav-input (or -S)
    を導入。そこからテキスト(やビット)を読めるようにする。

    sav 中のさまざまな情報を表示したいというのもありえる。マーク位置だっ
    たり、bits のほうを表示したい…だったり。bits のほうにするのは、
    NESにまかせるのもありだが、mark を知りたいなら、NES だけでは無理だ。

    あと、ストローク分解後に、それが、どのストロークかを sav 中に残せな
    いのも困るだろう。bits に残すこともできるが、その場合は、bits の内
    容は少なくとも違うことになるのだから、統合するプロトコルが必要にな
    る。

  * translit に mark を導入。bits_mark としてどこを変換して、どういう
    漢字になるかを指定できるようにする。

  * 元の文字列を Bits に格納し、Bits 中の位置を bits_mark にして
    aa-char を表示できるようにしたいが、そのためには、translit に mark
    が必要になる。むしろ、bits_mark と、何文字目を aa-char にするかを独
    立に指定できるようにしたほうが、便利かもしれない。基本は、aa-char
    になった部分の最後の文字を mark するのが、適切としたい。で、自動的
    にmark がつくことがあるよぐらいに留めておいたほうがいいのかも。

  * address => {}。のようにハッシュで文字マップを指定できるようにもする。
    文字列での指定(parseでハッシュ化)もできるようにしとくべき。また、
    "ToPrintable" 風の処理ができる default_char も用意しておくべき。

  * asm の関数の引数の使い方や、violate に関してのコメントぐらいは残す。

  * 影ありのフォントを影なしでも扱えるよう、文字色として透明色を指定で
    きるようにする。

  * --aa-char とスケスケを組み合わせて、stroke 表示ができるな…。でも、
    まぁ、それは demo 程度で。

    ストロークの位相的な同値性みたいなのは、文字コードと別にあるか…。
    そのあたりは、単漢字辞書で前にやろうとしていた…。あれで重要なのは、
    演算ができるということより、演算の文法で検索ができるということだっ
    た。

  * キー入力なしは、KeyCCur 系と同じ扱いにして、長短を検出できるように
    する。

  * ReplayInitial を読んで、その内容を反映させたほうがいいかも。あと、
    なんか、夢でいろいろ思い付いてる感じなのだが、どうも忘れるというか、
    形にならない。

  * flag_gif 時に sav default の color や font を使う。

  * Sailor を二つ同時に表示…。Composition と Reading で mark 位置を同
    期させながらアニメーションさせる…。これが「ストローク」へのこのフ
    レームワークでの解答のように思う。一般に「ストローク」を見せる(遺
    す)ことを目的にするならもっと別の方法がいい。でも、このフレームワー
    クではこれが「ストローク」だと考えた。

    UI 上では、LOAD からの「同期」は目指さない。あえて、単純な、Flag
    ALL (または Flag Sync Start とか Ready...Flag!)だけ導入する。

    あと、ソースに色を付けるみたいにフォント・カラーを変えれないか？
    colorlize 関数を T ごとに指定する？拡張子ごとに指定できたほうが自然
    だな…。

  * そういえば、jsnes_fc_ui.js で ＄ か ＆ を入れたときの処理がまだちゃ
    んとなってなかった気がする…。

  * --debug オプションは用意するが、マニュアルには書かない。

  * Sailor の手の肌の色も変えたほうがいいかも。でも、軍手 OK な感じの
    今のままも嫌いじゃないんだが…。

  * [cocolog:74412954] で書いた Translit のフレームワークに沿って、複数
    の言語を同時に使うときは、起信号を jrf tl j0.01 t ja c などとする。
    このとき tl j0.01 が、Translit の複合バージョン指定で、t ja がデフォ
    ルトの言語を示す。

  * aa-char では、22x22 が最大で、それを超えるようなものについて、12行
    目を使って 99x89+22+22 とか geometory 表示できるようにしてもいいの
    ではないか？それ用に、aa-char 用のフォントには、数値のフォントを単
    色の色違いで入れておく。rotate もあったほうがいいかもだが、字数制限
    から n w s eかそういうので入れないといけないので、やめたほうがいい
    ように思う。

  * 赤旗白旗を２バイトで表すフォントもあっていいかも。また、アクセント
    位置のみを示すフォント(プレーン)もあっていいが、調子をそろえるのが
    難しい。むしろ、赤白旗フォントで、いつかを示したほうがいいかも。そ
    うすると体で覚える日本の古典芸能系のリズムの考え(当道制度となるいき
    さつとか)に戻っていって象徴界的には治まりやすいんじゃないか？

  * ダブルマウス入力で、手旗とか不可能なんだろうか？

  * たぶん replay で . や , の短縮表現に対応してなかったはず、v 0.01 と
    かの replay をやりやすくする。



X. やったこと

  * ld で Z が変化するとかアリ？beq bne の前に ld してないかチェック。
    store では変化しないあたりセンスを感じるが…。
    (2014-02-15 済)

  * FlagInvLetter などを作り、FlagCode と矛盾がないか調べる pl を書く。
    (2014-02-16 済)

  * ShowFlag, ShowCursor。Anim は CHR_TERM なら、一つ前のを繰り返す。
    (2014-02-16 済)

  * ParseKey を作る。
    (2014-02-16 済)

  * Syntax エラーでも make が止まらない。最後の出力をテストするか…と
    シェル変数にたしかそういうのが…と思ったがなぜかなくなってる。どう
    するか迷ったが、どちらかというと nesasm のほうがこの場合フツーじゃ
    ないので、エラーのときは exit(1) するように改造した。パッチを
    mkit251_linux.path に残す。(2014-02-16 済)

  * VBlank を知るため、$2002 を読み出したあと、スクロールが元に戻るら
    しく、それで BG が「ちらつく」とか「ずれる」とか思った。VBlang な
    どになして…とか思った。(2014-02-16 済)

  * psg_test.nes を作る。(2014-02-17)

  * 割り込み時にちゃんとレジスタを退避する。デフォルトでは a,x,y すら退
    避されないのか…。(2014-02-17)

  * 旗が手の下に来ないようにする。Italic をデフォルトにする。
    (2014-02-17 済)

  * Debug の説明を書く。psg_test.asm にも。(2014-02-18 済)

  * 1 ドット問題、BG をずらしてたが、SP をずらすことにした。
    (2014-02-18 済)

  * NonPrintable は赤い ! で表示する。URL エンコードの % をインスパイア
    したいが、% のあとに数値を書くと文字数増えちゃって面倒なので全部、
    赤 ! (コードは 7F)で。(2014-02-18 済)

  * ロゴに関する注意。PD になった本の検印といっしょ。
    (2014-02-18 済)

  * BitMaskTable, BitSetTable。(2014-02-18 済)

  * BG 3番カラーのパレットを変更。1番の白をピンクにしていただけのもの
    から、濃い目の色づかいに変えた。(2014-02-18 済)

  * gen_morse_table.pl を取りあえず書き上げた。これについてはこれでい
    い。配布するにはカッコ悪いが引用情報を残すためにも配布物に含めるは
    ず。(2014-02-20 済)

  * 旗はノイズ decay が on で F、type が 1、wavelen が F、playlen が 7。

    毎回鳴らすのではなくキー入力があったときに鳴らす。

    モールス信号は、三角波で 800Hz 近いソの音になる [TFreqHL] = 22 でい
    いみたい。でも、それ以外の長さのパラメータがよくわからない。

    エラー音はノイズで、decay が on で 7、type が 1、wavelen が 4、
    playlen が 2。

    (2014-02-20 済)

  * Morse は 1P の A ボタンだが、それが押されたときは、そのボタンでな
    く、2P のスタートボタンが(旗なしで)押されたものとして扱う。
    (2014-02-20 済)

  * Resource::locate_file_resource で RESOURCE_PATH からファイル名を得
    ることにする。
    (2014-02-20 済)

  * mdInputNNum, mdInputCtrl。手旗でのモールス処理。
    (2014-02-22 済)

  * SELECT + 方向キーで、ロード後に System Switch を変更できるようにす
    る。(2014-02-23 済)

  * セーブデータ領域を外から動的に操作して通信するためのマジックコード
    を作る。(2014-02-23 済)

  * キャラの色数を増やした。(2014-02-27 済)

  * allot_magic は、一回で、一つのランダムにするかしたほうがいいのかな？
    あと、取るなら、メモリよりも画面から取ったほうがいい気がする。でも
    二つの文字列を画面から取るのもあれだから、もう一方は、キー入力にす
    るか？→キーと画面の二つを元にランダムを取る。(2014-03-02 済)

  * 三谷 末治＆古藤 泰美『旗と船舶通信 五訂版』を買い、チラと見る。モー
    ルス信号を手旗でする方法が載っていた。が、それに従うのは難しい。た
    だ、それを参考に 07 の位置を CHR_NULL2 として、文字区切りに使いや
    すいコードとした。(2014-03-02 済)

  * '_'->'.' で '.'、'_'->' ' で ',' とする。(2014-03-02 済)

  * jsnes_fc_ui.js の Flag Semaphore ボタンの実装。(2014-03-03 済)

  * Pause からの Push は、ステップ入力的にする。(2014-03-04 済)

  * ROM 名を残しておき、ストレージから読むときにチェック。また、SAV は
    File Writer API で残せるようにする。→ File Writer はダウンロード
    とはなんか違う。Blob と URL.createObjectURL を使った。(2014-03-04
    済)

  * Flag Semaphore で方向指示してユーザーはボタンを押すだけ…といった
    使い方も(不完全ながら)できるようにする。(2014-03-05 済)

  * inputNext で Pause からはじまれば、最後も Pause する。
    (2014-03-06 済)

  * inputNext で 1P が c 位置に来れるようモールスボタンを作る。モールス
    入力中は、1P は c にする。Dash Dot Delim。さらに、コード入力用の
    Raw を作る。それぞれ fullwidth halfwidth の - ・ # & にする。
    (2014-03-06 済)

  * flag_code_to_ascii は flag_code_to_string にする。$self があれば、
    状態保持。オプションで flash => 1 があるとフラッシュ。一方、
    ascii_to_flag_code はそのまま、ただし、モールスや RAW モードを使え
    るようにする。そして string_to_flag_code は utf8 化して
    ascii_to_flag_code に渡すだけ。
    (2014-03-06 済)

  * JSNES のメモリは jsnes(.nes).cpu.mem のよう。load と write の監視
    は、nes.mmap.load と nes.mmap.write を差し換えればうまくいきそう。
    (2014-03-06 既済)

  * LoadCount や RandSeed への書き込みを監視し、そこでセーブ領域のスナッ
    プショットを取れるようにする。そのとき、書き込んだのと違う値が読み
    出せるように設定できるとする。さらに RandSeed は特別に読み出しの際、
    allot_magic のナンバーを(４ケタ中２ケタ使って)与えることができるよ
    うにする。
    (2014-03-06 既済)

  * Translit::inverted_copy, Translit::Function . (2014-03-08 済)

  * JRF::FlagSemaphore::NgbCommand. (2014-03-09 済)

  * jrf_semaphore.html (2014-03-10 済)

  * load 系は minilisp に。loadinit も from string 版があっていい。
    (2014-03-10 済)

  * 手旗で $70 でも $07 と同じく CHR_NULL2 になるようにした。また、手旗
    の Num モードの表示を '&' から '$' に。(モールスの '$' は導入してな
    い。) (2014-03-10 済)

  * .gif_font は「オプション」がかなり長くなりそうなので、\ \n に対応
    し、複数行書けるようにする。その際もできれば、# によるコメントはで
    きるようにしたい。→ Naggy::next_line で実現。(2014-03-10 済)

  * check_version.pl もいるかな…。今回は特殊なのが出てきたから、作っと
    いたほうがいいか。→作った。(2014-03-10 済)

  * translit まわりは、~/projects/naggy/emacs-input-method/naggy-backend.pl
    から持ってくる。(2014-03-10 済)

  * .gif_font --nes 0 --palette 1 などで、ROM 上の CHR を指定できるよう
    にする。パレットは、3,5,6,7 といったファミコンパレットの直接指定で
    も OK。(2014-03-10 済)

  * No_Ad_URL やられてるかのチェックに、linker や linkee があればいい
    (なければダメ)というのもやったほうがいいのかもしれないが…。まぁ、
    これは、jsnes_test.html の役割が終って、jrf_semaphore.html みたい
    なのができてから、跡地にそれを残すときにどうするか決めよう。

    『アーケードゲーマーふぶき』にインスパイアされた感じで。

    →インスパイアな感じは出せなかったかな…。(2014-03-10 済)

  * parse_int のバグ取り。Naggy::regular_string を作る。(2014-03-12 済)

  * flag_code_to_string でキャンセルのときそれを記録できるようにした。
    (2014-03-12 済)

  * TRL_NGINIT 自体を登録できるようにする。ただし、それは ngb 起動時の
    み。init_naggy_background も作る。あと、NgbCommand は abbrev を参
    照するようにしたほうがスッキリ書けそう。あと、.trl という規格のバー
    ジョン以外に、そのファイル自体のバージョンも書くようにしておく。
    (2014-03-14 済)

  * locate_file。absolute パス関連の見直し。
    → メンドクセー File::Spec is_subpath とかすらない。(2014-03-14 済)

  * 少しだけ、LoadCount がらみの処理を変更し、LoadCost を外挿しやすく
    したつもり。(2014-03-14 済)

  * BITS_BUF, BITS_POINT, BITS_MARK。$03 で BITS がセット。' ' で
    BITS_MARK がセット。BITS_POINT は２バイトで、１バイト目はビット位
    置なので、将来の拡張のために下位の３ビット以外が立っていればロード
    エラーとする。(2014-03-17 済)

  * '&' + $03 で BITS モードチェンジ。このときは ' ' でビット反転、$03
    で左右に動くようにする。このときビット境界を示す音、ビット状態の音
    が欲しい。

    SELECT + 2P の第４ビット目で、SwapBitsText。Swap の際は、BitsMark
    に #$7 してからやること、BitsMark のチェックはこのタイミングのみで。
    (2014-03-19 済。BitsMark のチェックは必要ない。BitsMark +1 を使う
    から。)

  * jsnes_fc_ui.js で、BackupRam 対応でない ROM の場合は、いきなり
    localStrage をみて inject しない。具体的には sample1 でスタートし
    てから、切り換えても前の BackupRam につながるようにする。
    (2014-03-21 済)

  * 出力オプションとしての --sav。このとき BITS もセーブできるようにす
    る。
    (2014-03-21 済)

  * jsnes_fc_ui.js で、NES 画面だけを移動できるようにしたりできるもの
    だろうか…。→できた。
    (2014-03-25 済)

  * PUBLIC_ は「使わない」。これはα同値における変数名のようなもので、
    meme や gene のためではなく、Debug 用に作るのが前提…といったところ
    から考えたい。

    cvar に Hooker を用意し、add_cvar_hook を MyOO で用意し、それを
    Figure は PUBLIC に制限する形にする。PUBLIC 以外への hook も
    $DEBUG モードであれば carp するだけだが、そうでないときは cloak す
    るという方向にして、template と差別化する。

    いちおう $CVAR_DEBUG でコントロールする。

    (2014-03-26 済)

  * Sailor の Flag と Chr の位置を整理。その上で、bank 1 の 00 - 0F に
    aa-char 用のドットを入れる。
    (2014-03-27 済)

  * jrf_semaphore.pl。MDReplay の前に作る。

    バイナリを 7bit 符号化＆逆変換。最初は手旗の "jrf " で、($0)," c "
    まで読み飛ばすのがプロトコル。なお、ascii コードだと "jrf" は
    "B\"\x02" で、" " は "w"、"c" は "0" になる。

    必要な表やデータは .asm と .nes から読む。.nes だけでもできなかない
    が、.asm が残ったほうがいいのでそこは歌舞伎的に。

    gif アニメの出力までは作りたい。できれば逆変換も。さらにできれば
    Perl モジュール化したい。
    (2014-03-?? 済)

  * jrf_semaphore.pl では translit を指定できるようにすべきでは？
    Non-English extensions を削る代わりとして。jrf,$0 のあと、
    " t j0ltn\x00" などと指定。j 0 が jrf_semaphore のメジャーバージョ
    ン 0 のテーブルを使用するという意味。

    '-t' オプションで transliteration のみ。'-t -u' でその逆変換のみ。
    テーブルの指定は '-T j0ltn' (または単に -T ltn)みたいにする。
    (2014-03-?? 済)

  * jrf_semaphore.pl で開発したテクニックをブログに書く。HashFreezer
    まわり「Perl…C++風 その４」として書くとか。そのときは
    autovivification のことも書くべき。
    (2014-03-?? 済)

  * Bボタンで Cancel だけど長押しで Error にする。モールス短音・長音と
    同じような扱いにする。
    (2014-03-30 済)

  * 超長押しにしても再入力はないようにする。
    (2014-03-30 済)

  * Key1Cur Key2Cur ではなく KeyDCur (方向)、KeyCCur (コマンド) で見る。
    KeyCCur は、どのボタンが同時押しかはやはり見ないが、同時押しがある
    かどうかはチェックできるようにする。これにより、モールス短音を同時
    押しでキャンセルできるようにする。
    (2014-03-30 済)

  * ToPrintable はテーブルから読むようにして、それを vram 切り換え時に
    切り換える。実は、「大元」のシステムはアトリビュート面にあたる領域
    はそういう風に使われていたのではないか？で、どこかで、ファミコン風
    になった…と。
    (2014-03-30 済)

  * ロード時の VRAM マップに関しては、前の $30 の替わりに他の数字を指定
    できるようにする。おそらく、読み出したところにそれを書き込むべきな
    のだろう。
    (2014-03-30 済)

  * NUM でも , や . (や ' ')は入力できるようにする。
    (2014-03-30 済)

  * Bits左右移動モード時に Mark 位置にきたら Shot ではなく RingBeep す
    る。
    (2014-03-30 済)

  * 00_register_trl_init.nginit を読むタイミングの間違いの修正。
    (2014-03-31 済)

  * parse_int の _ は一つ以上もありにする。
    (2014-03-31 済)

  * jsnes_test.html で、inc_lang で includedLanguage を指定できるよう
    にしておく。Google の「まさか」に備えるため。インジェクションに注
    意してコードすること。また、en と ja は常に含まれるようにしたほう
    がこれまでと矛盾が起きにくいかな。
    (2014-04-01 済)

  * Flag with Floats ボタン。id:whole-button。Dock から console が離れ
    たあと表示。absolute-top-left の a#"hook"s に click イベントを送る
    と、hook はそれを自分の Flag ボタンに redirect する。
    (2014-04-24 済)

  * italic は slant が普通なので、slant をデフォルトにして non-slanted
    か upright にしても良いのだが…。公開前なら、こだわっても良かった
    が、もう公開しちゃってるので、そこまでこだわる必要もないか…と。

    → upright ではなく blur (にぶい)にする。(Google 訳は「あをによ
    い」)にする。
    (2014-04-24 済)

  * 8x8 ドットフォントのときは ScrollY を 4 ずらす。ただ、punctuation
    は上下二画面とかにすると、上にあるのに下にないとかがメンドウなので、
    それは 8x16 のままで。
    (2014-05-20 済)

  * cvar に対する Hooker はデフォルトで付くようにした。具体的には
    JRF::Figure のクラス定義で $JRF::MyOO::CVAR_DEBUG = 1; を設定した。
    これで $DEBUG == 0 だと、add_cvar_hook で carp じゃなく croak する
    ようになった。このあたり HashFreezer と対称的なのは仕様。
    (2014-05-21 済)

  * character_l1.chr を作成。(2014-05-23 済)

  * 出せる方向を増やすため、jsnes_fc_ui.js で W Z X とかの大文字フラッ
    グに対応する。 → やっちゃダメ！大文字は _ + z とかで出すんだから。
    でも、L が 6 番位置のときを出せるよう 'W' だけは大文字版で出すよう
    にすべきだろう。このままで '&' も出せなかないが難し過ぎる。

    ついでにやっと気付いた FlagCode で大文字でも小文字で出す仕様を反映。
    (2014-06-06 済)

  * オマケのアラビア文字 TRL を添付。
    (2014-06-06 済)

